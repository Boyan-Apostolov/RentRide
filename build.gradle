plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.sonarqube" version "5.1.0.4882"
    id "jacoco"
}

group = 'nl.fontys.s3'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.stripe:stripe-java:26.12.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    testRuntimeOnly 'com.h2database:h2'


}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

sonar {
    properties {
        property "sonar.projectKey", "RentRide"
        property "sonar.projectName", "RentRide"
        property "sonar.token", "sqp_2da0722553ac2ec00ade642033722979598cc0b0"
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}